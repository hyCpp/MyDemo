# ENGINE_FLAG = ALL, NUANCE, IFLYTEK
SET (ENGINE_FLAG ALL)

##########################################
#### PRIVATE_RECOG_C_FLAGS
##########################################
SET(PRIVATE_RECOG_C_FLAGS ${PRIVATE_RECOG_C_FLAGS}
	${NAVI_GLOBAL_CFLAGS}
    "-DIPC_MESSAGE_IMPL"
    "-DCOMPILER_GCC_SMT"
)

##########################################
#### PRIVATE_RECOG_CXX_FLAGS
##########################################
SET(PRIVATE_RECOG_CXX_FLAGS ${PRIVATE_RECOG_CXX_FLAGS}
	${NAVI_GLOBAL_CPPFLAGS} 
    "-Wno-non-virtual-dtor" 
    "-std=c++11"
)

IF(ENGINE_FLAG MATCHES "ALL")
SET(PRIVATE_RECOG_CXX_FLAGS  ${PRIVATE_RECOG_CXX_FLAGS} 
    "-D _NUANCE" 
    "-D _IFLYTEK"
)
ELSEIF(ENGINE_FLAG MATCHES "NUANCE")
SET(PRIVATE_RECOG_CXX_FLAGS ${PRIVATE_RECOG_CXX_FLAGS} 
    "-D _NUANCE" 
)
ELSE()
SET(PRIVATE_RECOG_CXX_FLAGS ${PRIVATE_RECOG_CXX_FLAGS} 
    "-D _IFLYTEK"
)
ENDIF()

# ===== for gtest =====
SET(PRIVATE_RECOG_CXX_FLAGS ${PRIVATE_RECOG_CXX_FLAGS} 
    "-D _GTEST_EMULATOR"
    "-D MACRO_Test"
    # "-fno-exceptions"
    # "-fno-rtti"
)

##########################################
#### PRIVATE_RECOG_LINK_SHARED_LIBRARIES
##########################################
SET(PRIVATE_RECOG_LINK_SHARED_LIBRARIES ${PRIVATE_RECOG_LINK_SHARED_LIBRARIES}
    "libpugixml-navi"
    "libexpreval-navi"
    "libcommonlib-navi"
    "libaplcommon-navi"
    "libvoicecomm-navi"
    "libvr_configure-navi"
    "libvocon3200_pron.so"
    "libvocon3200_platform.so"
    "libvocon3200_gram2.so"
    "libvocon3200_base.so"
    "libvocon3200_asr.so"
    "libvocon_ext_stream.so"
    "libvocon_ext_heap.so"
    "libgenericdca.so"
    "libisssr.so"
    "libissauth.so"
    "libiFlyNLI.so"
    "liblsa.so"
    "libivMAEKernel.so"
    "libbargein.so"
    #"libmsc.so"
    "libPResBuild.so"
)

# SET(PRIVATE_RECOG_LINK_SHARED_LIBRARIES ${PRIVATE_RECOG_LINK_SHARED_LIBRARIES}
#     "libvr_asr-navi"
# )

##########################################
#### PRIVATE_RECOG_INC_LIST
##########################################
SET(PRIVATE_RECOG_INC_LIST ${PRIVATE_RECOG_INC_LIST}
    ${NAVI_BASE_INC}
    "${USER_CONF_PROJECT_ROOT_DIR}/framework/base/QtFramework"
    "${USER_CONF_PROJECT_ROOT_DIR}/framework/api/QtSystemAPI/include/nqsystem"
    "${USER_CONF_PROJECT_ROOT_DIR}/externals/libcurl/include/"
    "${USER_CONF_PROJECT_ROOT_DIR}/externals/libxml2/include"
    "${USER_CONF_PROJECT_ROOT_DIR}/externals/icu4c/common"
    "${USER_CONF_PROJECT_ROOT_DIR}/system/core/include"
    "${USER_CONF_NAVILIB_SRC_DIR}/base/navicommon/include"
    "${USER_CONF_NAVILIB_SRC_DIR}/base/commonlib/aplcommonlib/include/"
    "${USER_CONF_NAVILIB_SRC_DIR}/base/commonlib/commonlib/include/"
    "${USER_CONF_NAVILIB_SRC_DIR}/externals/expreval/src"
    "${USER_CONF_NAVILIB_SRC_DIR}/externals/boost"
    "${USER_CONF_NAVILIB_SRC_DIR}/externals/pugixml"
    "${USER_CONF_NAVILIB_SRC_DIR}/externals/tinyxpath"
    "${USER_CONF_NAVILIB_SRC_DIR}/externals/rapidjson/include"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicecomm/publicinc"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/utility"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/publicinc"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/include"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/Common/PublicInc"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/Common/Impl"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/publicinc"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/configure/include/"
)

IF(ENGINE_FLAG MATCHES "ALL")
SET(PRIVATE_RECOG_INC_LIST ${PRIVATE_RECOG_INC_LIST}
    "${USER_CONF_PROJECT_ROOT_DIR}/vendor/renesas/iflytek/dcu_e2/include"
    "${USER_CONF_PROJECT_ROOT_DIR}/vendor/renesas/nuance/dcu_e2/VoConHybrid/include"
)
ELSEIF (ENGINE_FLAG MATCHES "NUANCE")
SET(PRIVATE_RECOG_INC_LIST ${PRIVATE_RECOG_INC_LIST}
    "${USER_CONF_PROJECT_ROOT_DIR}/vendor/renesas/nuance/dcu_e2/VoConHybrid/include"
)
ELSE()    
SET(PRIVATE_RECOG_INC_LIST ${PRIVATE_RECOG_INC_LIST}
    "${USER_CONF_PROJECT_ROOT_DIR}/vendor/renesas/iflytek/dcu_e2/include"
)
ENDIF()

# ===== for gtest =====
SET(PRIVATE_RECOG_INC_LIST ${PRIVATE_RECOG_INC_LIST}
    "${USER_CONF_PROJECT_ROOT_DIR}/externals/googletest/include"
    "${USER_CONF_PROJECT_ROOT_DIR}/externals/googlemock/include"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/test/voicerecoglib/asr/publicinc"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/test/voicerecoglib/asr/impl"
)

##########################################
#### PRIVATE_RECOG_SRC_LIST
##########################################
SET(PRIVATE_RECOG_SRC_LIST_NUANCE
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_Engine_Agent.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_Engine_Base.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_Event_Notify_Impl.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_Event_Phase_Impl.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_Event_Result_Impl.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_Event_Init_Notify_Impl.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_Event_Notify_Impl_Signal_Level.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_Fn_Get_string_Line_Fixed.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_Fn_Get_string_Path.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_Fn_string.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_Fn_Dir_File.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_Log.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_Vocon_Data_Context.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_Vocon_Data_Context_Field.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_Vocon_Data_Context_Grammar.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_Vocon_Data_Context_List.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_Vocon_Data_Context_Spelling.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_Vocon_Data_Context_Userword.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_Vocon_Data_Context_In_Dialog.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_Vocon_Data_Dialog.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_Vocon_Data_Node_Result.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_Vocon_Data_Party.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_Vocon_Data_Rule.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_Vocon_Data_Tag.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_Vocon_Engine_Concrete.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_Vocon_Via_Shared_Engine_Concrete.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_Vocon_Fn_Callback_LH_Error.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_Vocon_Fn_Callback_LH_Rec_Advance.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_Vocon_Fn_Callback_LH_Rec_Event.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_Vocon_Fn_Get_ro_LH_AUDIOIN_INTERFACE.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_Vocon_Fn_Get_ro_LH_HEAP_INTERFACE.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_Vocon_Heap.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_Vocon_Mgr_Data.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_Vocon_Mgr_Rec.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_Vocon_Request_Data.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_Vocon_Result.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_Vocon_Thread_Data.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_Vocon_Thread_Rec.cpp" 
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_Vocon_Data_Context_Fuzzy.cpp" 
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_Vocon_Data_Context_Fuzzy_Host.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_Vocon_Data_CLC.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_Vocon_Fn_Callback_FuzzyMatchCtxCpl_Error.cpp" 
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_Vocon_Vocon.cpp" 
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_Vocon_Fn_Iostream.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_Mock.cpp"
)

SET(PRIVATE_RECOG_SRC_LIST_IFLYTEK
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_Log.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_Fn_string.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_Fn_Get_string_Path.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_Event_Result_Impl.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_Event_Phase_Impl.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_Event_Notify_Impl.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_Event_Init_Notify_Impl.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_Event_Notify_Impl_Signal_Level.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_Engine_Base.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_Engine_Agent.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_IFlyTek_Engine_Concrete.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_IFlyTek_Mgr_Data.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_IFlyTek_Thread_Data.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_IFlyTek_Fn_Callback_Msg.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_IFlytek_IFlytek.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/voicerecoglib/asr/impl/Vr_Asr_Impl_Mock.cpp"
)

IF(ENGINE_FLAG MATCHES "ALL")
SET(PRIVATE_RECOG_SRC_LIST ${PRIVATE_RECOG_SRC_LIST} ${PRIVATE_RECOG_SRC_LIST_NUANCE} ${PRIVATE_RECOG_SRC_LIST_IFLYTEK})
ELSEIF (ENGINE_FLAG MATCHES "NUANCE")
SET(PRIVATE_RECOG_SRC_LIST ${PRIVATE_RECOG_SRC_LIST} ${PRIVATE_RECOG_SRC_LIST_NUANCE})
ELSE()    
SET(PRIVATE_RECOG_SRC_LIST ${PRIVATE_RECOG_SRC_LIST} ${PRIVATE_RECOG_SRC_LIST_IFLYTEK})
ENDIF()

# ===== for gtest =====
SET(PRIVATE_RECOG_SRC_LIST ${PRIVATE_RECOG_SRC_LIST}
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/test/voicerecoglib/asr/publicinc/Vr_Asr_Engine_test.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/test/voicerecoglib/asr/publicinc/AudioIn_Adapter.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/test/voicerecoglib/asr/publicinc/C_Engine_Test.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/test/voicerecoglib/asr/publicinc/File_Resolve.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/test/voicerecoglib/asr/publicinc/Record_Log.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/test/voicerecoglib/asr/publicinc/Wav_File.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/test/voicerecoglib/asr/publicinc/Win_Linux_Interface.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/test/voicerecoglib/asr/publicinc/Vr_Asr_Engine_Gtest_Helper.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/test/voicerecoglib/asr/publicinc/Vr_Asr_Impl_Vocon_Vocon_Mock.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/test/voicerecoglib/asr/publicinc/Vr_Asr_Impl_IFlytek_IFlytek_Mock.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/test/voicerecoglib/asr/publicinc/Vr_Asr_Impl_IFlytek_Callback_Mock.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/test/voicerecoglib/asr/publicinc/Vr_Asr_Impl_IFlytek_Thread_Callback_Mock.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/test/voicerecoglib/asr/publicinc/Vr_Asr_Impl_Gtest.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/test/voicerecoglib/asr/publicinc/Vr_Asr_Impl_Engine_Agent_Test.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/test/voicerecoglib/asr/publicinc/Vr_Asr_Impl_Fn_string_Test.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/test/voicerecoglib/asr/publicinc/Vr_Asr_Impl_IFlyTek_Engine_Concrete_Test.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/test/voicerecoglib/asr/publicinc/Vr_Asr_Impl_Vocon_Engine_Concrete_Test.cpp"
    "${USER_CONF_NAVILIB_SRC_DIR}/voice/voicerecog/test/voicerecoglib/asr/publicinc/Vr_Asr_Impl_IFlyTek_Mgr_Data_Test.cpp"
)
